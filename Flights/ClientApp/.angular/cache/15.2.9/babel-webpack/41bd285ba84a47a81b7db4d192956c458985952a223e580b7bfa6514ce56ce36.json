{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet BookFlightComponent = class BookFlightComponent {\n  constructor(route, flightService, router, authService, fb) {\n    this.route = route;\n    this.flightService = flightService;\n    this.router = router;\n    this.authService = authService;\n    this.fb = fb;\n    this.flightId = 'not loaded';\n    this.flight = {};\n    this.form = this.fb.group({\n      number: [1]\n    });\n    this.findFlight = flightId => {\n      this.flightId = flightId ?? 'not passed';\n      this.flightService.findFlight({\n        id: this.flightId\n      }).subscribe({\n        next: flight => {\n          this.flight = flight;\n        },\n        error: error => {\n          if (error.status == 404) {\n            alert(\"Flight not found!\");\n            this.router.navigate(['/search-flights']);\n          }\n          console.log(\"Response Error. Status: \", error.status);\n          console.log(\"Response Error. Status Text: \", error.statusText);\n          console.log(error);\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    if (!this.authService.currentUser) this.router.navigate(['register-passenger']);\n    this.route.paramMap.subscribe(p => this.findFlight(p.get(\"flightId\")));\n  }\n  book() {\n    console.log(`Booking ${this.get('number')?.value} passengers for the flight: ${this.flight.id}`);\n  }\n};\nBookFlightComponent = __decorate([Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})], BookFlightComponent);\nexport { BookFlightComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAE9BC,YAAoBC,KAAqB,EAAUC,aAA4B,EAAUC,MAAc,EAAUC,WAAwB,EAASC,EAAe;IAA7I,UAAK,GAALJ,KAAK;IAA0B,kBAAa,GAAbC,aAAa;IAAyB,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAAsB,OAAE,GAAFC,EAAE;IAEpJ,aAAQ,GAAW,YAAY;IAC/B,WAAM,GAAa,EAAE;IAErB,SAAI,GAAG,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC;MACnBC,MAAM,EAAE,CAAC,CAAC;KACX,CAAC;IAWM,eAAU,GAAIC,QAAuB,IAAI;MAC/C,IAAI,CAACA,QAAQ,GAAGA,QAAQ,IAAI,YAAY;MAExC,IAAI,CAACN,aAAa,CAACO,UAAU,CAAC;QAAEC,EAAE,EAAE,IAAI,CAACF;MAAQ,CAAE,CAAC,CAEjDG,SAAS,CAAC;QACTC,IAAI,EAAGC,MAAM,IAAI;UACf,IAAI,CAACA,MAAM,GAAGA,MAAM;QACtB,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UAEf,IAAIA,KAAK,CAACC,MAAM,IAAI,GAAG,EAAE;YACvBC,KAAK,CAAC,mBAAmB,CAAC;YAC1B,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;;UAG3CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,KAAK,CAACC,MAAM,CAAC;UACrDG,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,KAAK,CAACM,UAAU,CAAC;UAC9DF,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;QACpB;OACD,CAAC;IACN,CAAC;EAvCoK;EASrKO,QAAQ;IAEN,IAAI,CAAC,IAAI,CAACjB,WAAW,CAACkB,WAAW,EAC/B,IAAI,CAACnB,MAAM,CAACc,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAE9C,IAAI,CAAChB,KAAK,CAACsB,QAAQ,CAChBZ,SAAS,CAACa,CAAC,IAAI,IAAI,CAACf,UAAU,CAACe,CAAC,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;EACvD;EAyBAC,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,WAAW,IAAI,CAACM,GAAG,CAAC,QAAQ,CAAC,EAAEE,KAAK,+BAA+B,IAAI,CAACd,MAAM,CAACH,EAAE,EAAE,CAAC;EAClG;CACD;AA9CYX,mBAAmB,eAL/BD,SAAS,CAAC;EACT8B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW/B,mBAAmB,CA8C/B;SA9CYA,mBAAmB","names":["Component","BookFlightComponent","constructor","route","flightService","router","authService","fb","group","number","flightId","findFlight","id","subscribe","next","flight","error","status","alert","navigate","console","log","statusText","ngOnInit","currentUser","paramMap","p","get","book","value","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Marc Angelo\\source\\repos\\Flights\\Flights\\ClientApp\\src\\app\\book-flight\\book-flight.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlightService } from './../api/services/flight.service';\nimport { FlightRm } from '../api/models';\nimport { AuthService } from '../auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})\nexport class BookFlightComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private flightService: FlightService, private router: Router, private authService: AuthService,private fb: FormBuilder) { }\n\n  flightId: string = 'not loaded'\n  flight: FlightRm = {}\n\n  form = this.fb.group({\n    number: [1]\r\n  })\n\n  ngOnInit(): void {\n\n    if (!this.authService.currentUser)\n      this.router.navigate(['register-passenger'])\n\n    this.route.paramMap\r\n      .subscribe(p => this.findFlight(p.get(\"flightId\")))\r\n  }\n\n  private findFlight = (flightId: string | null) => {\r\n    this.flightId = flightId ?? 'not passed';\r\n\r\n    this.flightService.findFlight({ id: this.flightId })\r\n\r\n      .subscribe({\r\n        next: (flight) => {\r\n          this.flight = flight;\r\n        },\r\n        error: (error) => {\r\n\r\n          if (error.status == 404) {\r\n            alert(\"Flight not found!\")\r\n            this.router.navigate(['/search-flights'])\r\n          }\r\n       \r\n          console.log(\"Response Error. Status: \", error.status)\r\n          console.log(\"Response Error. Status Text: \", error.statusText)\r\n          console.log(error)\r\n        }\r\n      })\r\n  }\r\n\r\n  book() {\r\n    console.log(`Booking ${this.get('number')?.value} passengers for the flight: ${this.flight.id}`)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}