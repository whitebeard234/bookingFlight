{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.authService.currentUser) this.router.navigate(['/register-passenger', {\n      requestedUrl: state.url\n    }]);\n    return true;\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,SAAS;EAGpBC,YAAoBC,WAAwB,EAClCC,MAAc;IADJ,gBAAW,GAAXD,WAAW;IACrB,WAAM,GAANC,MAAM;EAAY;EAE5BC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,CAAC,IAAI,CAACJ,WAAW,CAACK,WAAW,EAC/B,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,qBAAqB,EAAE;MAAEC,YAAY,EAAEH,KAAK,CAACI;IAAG,CAAE,CAAC,CAAC;IAE5E,OAAO,IAAI;EACb;;SAdWV,SAAS;;mBAATA,MAAS;AAAA;;SAATA,MAAS;EAAAW,SAATX,MAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","currentUser","navigate","requestedUrl","url","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Marc Angelo\\source\\repos\\Flights\\Flights\\ClientApp\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard {\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n    private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if (!this.authService.currentUser)\r\n      this.router.navigate(['/register-passenger', { requestedUrl: state.url }])\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}